// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.8
// source: cos.proto

package api_cos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// CosBucketURL
type CosBucketURLResObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketURL string `protobuf:"bytes,1,opt,name=bucketURL,proto3" json:"bucketURL,omitempty"`
}

func (x *CosBucketURLResObj) Reset() {
	*x = CosBucketURLResObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosBucketURLResObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosBucketURLResObj) ProtoMessage() {}

func (x *CosBucketURLResObj) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosBucketURLResObj.ProtoReflect.Descriptor instead.
func (*CosBucketURLResObj) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{0}
}

func (x *CosBucketURLResObj) GetBucketURL() string {
	if x != nil {
		return x.BucketURL
	}
	return ""
}

type CosBucketURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CosBucketURLReq) Reset() {
	*x = CosBucketURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosBucketURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosBucketURLReq) ProtoMessage() {}

func (x *CosBucketURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosBucketURLReq.ProtoReflect.Descriptor instead.
func (*CosBucketURLReq) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{1}
}

type CosBucketURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CosBucketURLResObj `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CosBucketURLResp) Reset() {
	*x = CosBucketURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosBucketURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosBucketURLResp) ProtoMessage() {}

func (x *CosBucketURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosBucketURLResp.ProtoReflect.Descriptor instead.
func (*CosBucketURLResp) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{2}
}

func (x *CosBucketURLResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CosBucketURLResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CosBucketURLResp) GetData() *CosBucketURLResObj {
	if x != nil {
		return x.Data
	}
	return nil
}

// CosPut
type CosPutResObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CosURI string `protobuf:"bytes,1,opt,name=cosURI,proto3" json:"cosURI,omitempty"`
}

func (x *CosPutResObj) Reset() {
	*x = CosPutResObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosPutResObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosPutResObj) ProtoMessage() {}

func (x *CosPutResObj) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosPutResObj.ProtoReflect.Descriptor instead.
func (*CosPutResObj) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{3}
}

func (x *CosPutResObj) GetCosURI() string {
	if x != nil {
		return x.CosURI
	}
	return ""
}

type CosPutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName  string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileBytes []byte `protobuf:"bytes,2,opt,name=fileBytes,proto3" json:"fileBytes,omitempty"`
}

func (x *CosPutReq) Reset() {
	*x = CosPutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosPutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosPutReq) ProtoMessage() {}

func (x *CosPutReq) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosPutReq.ProtoReflect.Descriptor instead.
func (*CosPutReq) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{4}
}

func (x *CosPutReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CosPutReq) GetFileBytes() []byte {
	if x != nil {
		return x.FileBytes
	}
	return nil
}

type CosPutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CosPutResObj `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CosPutResp) Reset() {
	*x = CosPutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosPutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosPutResp) ProtoMessage() {}

func (x *CosPutResp) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosPutResp.ProtoReflect.Descriptor instead.
func (*CosPutResp) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{5}
}

func (x *CosPutResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CosPutResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CosPutResp) GetData() *CosPutResObj {
	if x != nil {
		return x.Data
	}
	return nil
}

// CosGet
type CosGetResObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileBytes []byte `protobuf:"bytes,1,opt,name=fileBytes,proto3" json:"fileBytes,omitempty"`
}

func (x *CosGetResObj) Reset() {
	*x = CosGetResObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosGetResObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosGetResObj) ProtoMessage() {}

func (x *CosGetResObj) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosGetResObj.ProtoReflect.Descriptor instead.
func (*CosGetResObj) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{6}
}

func (x *CosGetResObj) GetFileBytes() []byte {
	if x != nil {
		return x.FileBytes
	}
	return nil
}

type CosGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CosURI string `protobuf:"bytes,1,opt,name=cosURI,proto3" json:"cosURI,omitempty"`
}

func (x *CosGetReq) Reset() {
	*x = CosGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosGetReq) ProtoMessage() {}

func (x *CosGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosGetReq.ProtoReflect.Descriptor instead.
func (*CosGetReq) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{7}
}

func (x *CosGetReq) GetCosURI() string {
	if x != nil {
		return x.CosURI
	}
	return ""
}

type CosGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CosGetResObj `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CosGetResp) Reset() {
	*x = CosGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosGetResp) ProtoMessage() {}

func (x *CosGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosGetResp.ProtoReflect.Descriptor instead.
func (*CosGetResp) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{8}
}

func (x *CosGetResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CosGetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CosGetResp) GetData() *CosGetResObj {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_cos_proto protoreflect.FileDescriptor

var file_cos_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x12, 0x43, 0x6f, 0x73,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x22, 0x11, 0x0a,
	0x0f, 0x43, 0x6f, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71,
	0x22, 0x61, 0x0a, 0x10, 0x43, 0x6f, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x73, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x0c, 0x43, 0x6f, 0x73, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x4f, 0x62, 0x6a, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x73, 0x55, 0x52, 0x49, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x73, 0x55, 0x52, 0x49, 0x22, 0x45, 0x0a, 0x09, 0x43,
	0x6f, 0x73, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x22, 0x55, 0x0a, 0x0a, 0x43, 0x6f, 0x73, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f, 0x73, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x4f, 0x62, 0x6a, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x0c, 0x43, 0x6f, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x09, 0x43, 0x6f, 0x73, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x73, 0x55, 0x52, 0x49, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x73, 0x55, 0x52, 0x49, 0x22, 0x55, 0x0a, 0x0a,
	0x43, 0x6f, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x6f, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0xbf, 0x01, 0x0a, 0x03, 0x43, 0x6f, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x43,
	0x6f, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x2e, 0x43, 0x6f,
	0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x43, 0x6f, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x63, 0x6f, 0x73, 0x2f, 0x70,
	0x75, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x6f, 0x73, 0x50, 0x75, 0x74, 0x12,
	0x0a, 0x2e, 0x43, 0x6f, 0x73, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x43, 0x6f,
	0x73, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d,
	0x22, 0x08, 0x2f, 0x63, 0x6f, 0x73, 0x2f, 0x70, 0x75, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x36, 0x0a,
	0x06, 0x43, 0x6f, 0x73, 0x47, 0x65, 0x74, 0x12, 0x0a, 0x2e, 0x43, 0x6f, 0x73, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x43, 0x6f, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x63, 0x6f, 0x73, 0x2f, 0x67,
	0x65, 0x74, 0x3a, 0x01, 0x2a, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x5f, 0x63,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cos_proto_rawDescOnce sync.Once
	file_cos_proto_rawDescData = file_cos_proto_rawDesc
)

func file_cos_proto_rawDescGZIP() []byte {
	file_cos_proto_rawDescOnce.Do(func() {
		file_cos_proto_rawDescData = protoimpl.X.CompressGZIP(file_cos_proto_rawDescData)
	})
	return file_cos_proto_rawDescData
}

var file_cos_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cos_proto_goTypes = []interface{}{
	(*CosBucketURLResObj)(nil), // 0: CosBucketURLResObj
	(*CosBucketURLReq)(nil),    // 1: CosBucketURLReq
	(*CosBucketURLResp)(nil),   // 2: CosBucketURLResp
	(*CosPutResObj)(nil),       // 3: CosPutResObj
	(*CosPutReq)(nil),          // 4: CosPutReq
	(*CosPutResp)(nil),         // 5: CosPutResp
	(*CosGetResObj)(nil),       // 6: CosGetResObj
	(*CosGetReq)(nil),          // 7: CosGetReq
	(*CosGetResp)(nil),         // 8: CosGetResp
}
var file_cos_proto_depIdxs = []int32{
	0, // 0: CosBucketURLResp.data:type_name -> CosBucketURLResObj
	3, // 1: CosPutResp.data:type_name -> CosPutResObj
	6, // 2: CosGetResp.data:type_name -> CosGetResObj
	1, // 3: Cos.CosBucketURL:input_type -> CosBucketURLReq
	4, // 4: Cos.CosPut:input_type -> CosPutReq
	7, // 5: Cos.CosGet:input_type -> CosGetReq
	2, // 6: Cos.CosBucketURL:output_type -> CosBucketURLResp
	5, // 7: Cos.CosPut:output_type -> CosPutResp
	8, // 8: Cos.CosGet:output_type -> CosGetResp
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cos_proto_init() }
func file_cos_proto_init() {
	if File_cos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosBucketURLResObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosBucketURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosBucketURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosPutResObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosPutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosPutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosGetResObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cos_proto_goTypes,
		DependencyIndexes: file_cos_proto_depIdxs,
		MessageInfos:      file_cos_proto_msgTypes,
	}.Build()
	File_cos_proto = out.File
	file_cos_proto_rawDesc = nil
	file_cos_proto_goTypes = nil
	file_cos_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CosClient is the client API for Cos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CosClient interface {
	CosBucketURL(ctx context.Context, in *CosBucketURLReq, opts ...grpc.CallOption) (*CosBucketURLResp, error)
	CosPut(ctx context.Context, in *CosPutReq, opts ...grpc.CallOption) (*CosPutResp, error)
	CosGet(ctx context.Context, in *CosGetReq, opts ...grpc.CallOption) (*CosGetResp, error)
}

type cosClient struct {
	cc grpc.ClientConnInterface
}

func NewCosClient(cc grpc.ClientConnInterface) CosClient {
	return &cosClient{cc}
}

func (c *cosClient) CosBucketURL(ctx context.Context, in *CosBucketURLReq, opts ...grpc.CallOption) (*CosBucketURLResp, error) {
	out := new(CosBucketURLResp)
	err := c.cc.Invoke(ctx, "/Cos/CosBucketURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosClient) CosPut(ctx context.Context, in *CosPutReq, opts ...grpc.CallOption) (*CosPutResp, error) {
	out := new(CosPutResp)
	err := c.cc.Invoke(ctx, "/Cos/CosPut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosClient) CosGet(ctx context.Context, in *CosGetReq, opts ...grpc.CallOption) (*CosGetResp, error) {
	out := new(CosGetResp)
	err := c.cc.Invoke(ctx, "/Cos/CosGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CosServer is the server API for Cos service.
type CosServer interface {
	CosBucketURL(context.Context, *CosBucketURLReq) (*CosBucketURLResp, error)
	CosPut(context.Context, *CosPutReq) (*CosPutResp, error)
	CosGet(context.Context, *CosGetReq) (*CosGetResp, error)
}

// UnimplementedCosServer can be embedded to have forward compatible implementations.
type UnimplementedCosServer struct {
}

func (*UnimplementedCosServer) CosBucketURL(context.Context, *CosBucketURLReq) (*CosBucketURLResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CosBucketURL not implemented")
}
func (*UnimplementedCosServer) CosPut(context.Context, *CosPutReq) (*CosPutResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CosPut not implemented")
}
func (*UnimplementedCosServer) CosGet(context.Context, *CosGetReq) (*CosGetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CosGet not implemented")
}

func RegisterCosServer(s *grpc.Server, srv CosServer) {
	s.RegisterService(&_Cos_serviceDesc, srv)
}

func _Cos_CosBucketURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CosBucketURLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosServer).CosBucketURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cos/CosBucketURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosServer).CosBucketURL(ctx, req.(*CosBucketURLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cos_CosPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CosPutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosServer).CosPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cos/CosPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosServer).CosPut(ctx, req.(*CosPutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cos_CosGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CosGetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosServer).CosGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cos/CosGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosServer).CosGet(ctx, req.(*CosGetReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Cos",
	HandlerType: (*CosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CosBucketURL",
			Handler:    _Cos_CosBucketURL_Handler,
		},
		{
			MethodName: "CosPut",
			Handler:    _Cos_CosPut_Handler,
		},
		{
			MethodName: "CosGet",
			Handler:    _Cos_CosGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cos.proto",
}
