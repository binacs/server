// Code generated by MockGen. DO NOT EDIT.
// Source: gateway/log_cleaner.go

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	"reflect"

	"github.com/golang/mock/gomock"
)

// MockLogCleanerService is a mock of LogCleanerService interface.
type MockLogCleanerService struct {
	ctrl     *gomock.Controller
	recorder *MockLogCleanerServiceMockRecorder
}

// MockLogCleanerServiceMockRecorder is the mock recorder for MockLogCleanerService.
type MockLogCleanerServiceMockRecorder struct {
	mock *MockLogCleanerService
}

// NewMockLogCleanerService creates a new mock instance.
func NewMockLogCleanerService(ctrl *gomock.Controller) *MockLogCleanerService {
	mock := &MockLogCleanerService{ctrl: ctrl}
	mock.recorder = &MockLogCleanerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogCleanerService) EXPECT() *MockLogCleanerServiceMockRecorder {
	return m.recorder
}

// Start mocks base method.
func (m *MockLogCleanerService) Start() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start.
func (mr *MockLogCleanerServiceMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockLogCleanerService)(nil).Start))
}

// Stop mocks base method.
func (m *MockLogCleanerService) Stop() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stop")
	ret0, _ := ret[0].(error)
	return ret0
}

// Stop indicates an expected call of Stop.
func (mr *MockLogCleanerServiceMockRecorder) Stop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockLogCleanerService)(nil).Stop))
}

// CleanOnce mocks base method.
func (m *MockLogCleanerService) CleanOnce() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CleanOnce")
	ret0, _ := ret[0].(error)
	return ret0
}

// CleanOnce indicates an expected call of CleanOnce.
func (mr *MockLogCleanerServiceMockRecorder) CleanOnce() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CleanOnce", reflect.TypeOf((*MockLogCleanerService)(nil).CleanOnce))
}

// GetStats mocks base method.
func (m *MockLogCleanerService) GetStats() map[string]interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats")
	ret0, _ := ret[0].(map[string]interface{})
	return ret0
}

// GetStats indicates an expected call of GetStats.
func (mr *MockLogCleanerServiceMockRecorder) GetStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockLogCleanerService)(nil).GetStats))
}
